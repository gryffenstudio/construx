---
import type { CollectionEntry } from 'astro:content';
import { getCollection, getEntries } from 'astro:content';
import type { CarouselImage, ProjectImageSlide, ProjectSlide } from '../../components/Carousel';
import { getImage } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import Carousel from '../../components/Carousel';

export async function getStaticPaths() {
    const projects = await getCollection('projects');
    return projects.map((project: any) => ({
        params: {
            project: project.data.slug,
        },
        props: { project },
    }));
}

interface Props {
    project: CollectionEntry<'projects'>;
}

const { project } = Astro.props as Props;

const similarProjects = await getCollection('projects', ({ data }: any) => {
    return data.service === project.data.service && data.projectName !== project.data.projectName;
});

const filteredProjects = similarProjects.slice(0, 3);

const membersOnProject: CollectionEntry<'team'>[] = await getEntries(project.data.members);

let projectCarouselSlides: ProjectImageSlide[] = [];
let similarProjectCarouselSlides: ProjectSlide[] = [];

for (let i = 0; i < project.data.projectImagesMobile.length; i++) {
    let carouselProjectSlide: ProjectImageSlide = {} as ProjectImageSlide;
    let carouselMobileProjectImageObject: CarouselImage = {} as CarouselImage;
    let carouselDesktopProjectImageObject: CarouselImage = {} as CarouselImage;

    let projectMobileImage = await getImage({
        src: project.data.projectImagesMobile[i].image,
        height: 675,
        width: 375,
        format: 'webp',
        quality: 'high',
    });

    carouselMobileProjectImageObject.image = projectMobileImage;
    carouselMobileProjectImageObject.alt = project.data.projectImagesMobile[i].alt;

    let projectDesktopImage = await getImage({
        src: project.data.projectImagesDesktop[i].image,
        height: 675,
        width: 1440,
        format: 'webp',
        quality: 'high',
    });

    carouselDesktopProjectImageObject.image = projectDesktopImage;
    carouselDesktopProjectImageObject.alt = project.data.projectImagesDesktop[i].alt;

    carouselProjectSlide.mobileImage = carouselMobileProjectImageObject;
    carouselProjectSlide.desktopImage = carouselDesktopProjectImageObject;

    projectCarouselSlides.push(carouselProjectSlide);
}

for (let i = 0; i < filteredProjects.length; i++) {
    let carouselProjectSlide: ProjectSlide = {} as ProjectSlide;
    let carouselMobileProjectImageObject: CarouselImage = {} as CarouselImage;
    let carouselDesktopProjectImageObject: CarouselImage = {} as CarouselImage;

    let featuredProjectMobileImage = await getImage({
        src: filteredProjects[i].data.cardImageMobile.image,
        height: 330,
        width: 327,
        format: 'webp',
        quality: 'high',
    });

    carouselMobileProjectImageObject.image = featuredProjectMobileImage;
    carouselMobileProjectImageObject.alt = filteredProjects[i].data.cardImageMobile.alt;

    let featuredProjectDesktopImage = await getImage({
        src: filteredProjects[i].data.cardImageDesktop.image,
        height: 330,
        width: 360,
        format: 'webp',
        quality: 'high',
    });

    carouselDesktopProjectImageObject.image = featuredProjectDesktopImage;
    carouselDesktopProjectImageObject.alt = filteredProjects[i].data.cardImageDesktop.alt;

    carouselProjectSlide.mobileImage = carouselMobileProjectImageObject;
    carouselProjectSlide.desktopImage = carouselDesktopProjectImageObject;
    carouselProjectSlide.href = `/portfolio/${filteredProjects[i].data.slug}`;

    similarProjectCarouselSlides.push(carouselProjectSlide);
}
---

<Layout
    title=`${project.data.projectName}`
    description=`${project.data.projectName}`
>
    <header class='relative -mt-8 pb-8'>
        <Carousel
            client:load
            projectImageSlides={projectCarouselSlides}
            paginationClass='.swiper-custom-pagination-project-images'
        />
    </header>
    <main>
        <section class='bg-brand-gray py-8'>
            <div class='container'>
                <h1 class='mb-8 text-3xl'>{project.data.projectName}</h1>
                <div class='flex flex-col lg:flex-row lg:items-start lg:justify-between'>
                    <div class='lg:w-1/2'>
                        <h2 class='text-left'>Project Summary</h2>
                        <p class='my-4 text-xl capitalize leading-[30px]'>
                            {project.data.projectSummaryParagraph}
                        </p>
                        <ul class='px-4'>
                            {
                                project.data.projectSummaryPoints.map((p) => {
                                    return <li class='text-xl leading-[30px]'>{p}</li>;
                                })
                            }
                        </ul>
                    </div>
                    <div class='my-8 *:mb-8 lg:my-0 lg:w-1/3'>
                        <div>
                            <h2 class='text-left'>Client</h2>
                            <p class='my-4 text-xl capitalize leading-[30px]'>
                                {project.data.clientName}
                            </p>
                        </div>
                        <div>
                            <h2 class='text-left'>Members</h2>
                            <ul class='list-none'>
                                {
                                    membersOnProject.map((m) => {
                                        return (
                                            <a
                                                href={`/team/${m.data.slug}`}
                                                class='cursor-pointer text-xl leading-[30px] text-brand-green-primary hover:opacity-50'
                                            >
                                                {m.data.name}
                                            </a>
                                        );
                                    })
                                }
                            </ul>
                        </div>
                        <div>
                            <h2 class='text-left'>Completion</h2>
                            <p class='my-4 text-xl capitalize leading-[30px]'>
                                {project.data.completionDate}
                            </p>
                        </div>
                        <div>
                            <h2 class='text-left'>Location</h2>
                            <p class='my-4 text-xl capitalize leading-[30px]'>
                                {project.data.location}
                            </p>
                        </div>
                        <div>
                            <h2 class='text-left'>Industry</h2>
                            <p class='my-4 text-xl capitalize leading-[30px]'>
                                {project.data.industry}
                            </p>
                        </div>
                        <div>
                            <h2 class='text-left'>Service</h2>
                            <p class='my-4 text-xl capitalize leading-[30px]'>
                                {project.data.service}
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class='container -mt-8 flex flex-col py-16'>
            <h2 class='text-left text-xl font-normal uppercase leading-[45px]'>
                More Projects Like This
            </h2>
            <div class='flex flex-col lg:hidden'>
                <Carousel
                    client:load
                    projectSlides={similarProjectCarouselSlides}
                    paginationClass='.swiper-custom-pagination-similar-projects'
                />
            </div>
            <div class='mt-8 hidden space-x-8 lg:flex'>
                {
                    similarProjectCarouselSlides.map((project: ProjectSlide, index: number) => {
                        return (
                            <a
                                href={`/portfolio/${project.href}`}
                                aria-label={`Featured Project ${index} Link`}
                            >
                                <img
                                    src={project.desktopImage.image.src}
                                    alt={project.desktopImage.alt}
                                    height={330}
                                    width={327}
                                    class='h-auto w-full'
                                />
                            </a>
                        );
                    })
                }
            </div>
            <a href='/portfolio' class='mx-auto mt-8 h-fit w-fit'>
                <button
                    class='mt-8 inline-flex h-12 w-fit items-center justify-center rounded-lg bg-brand-green-primary px-8 py-3 hover:opacity-50'
                >
                    <span class='font-medium uppercase tracking-tighter text-white'
                        >explore more projects</span
                    >
                </button>
            </a>
        </section>
    </main>
</Layout>
